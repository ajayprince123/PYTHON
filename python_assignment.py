# -*- coding: utf-8 -*-
"""Python Assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qh-28C_0EbXUuuHs0HKtJmnJZbJM0Y9W

## **EXPLORATORY DATA ANALYSIS**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv("/content/train.csv")

data

"""**INFORMATION ABOUT THE DATA**"""

data.info()

data.isnull().sum()

"""**DELETING COLUMNS WITH MORE NULL VALUES**"""

data1=data.drop(['Unnamed: 17', 'Unnamed: 18'], axis =1)

data1

"""**STATISTICS OF THE DATA**"""

data1.describe()

"""**FILLING ROWS WITH NULL VALUES**"""

data1.fillna(0)

data1.info()

"""**CHANGING DATA TYPES FOR NUMERIC DATA**"""

data1['Trend_day_count']= data1['Trend_day_count'].astype(float)
data1['dislike']= pd.to_numeric(data1['dislike'], errors = 'coerce')
data1['comment_count']= pd.to_numeric(data1['comment_count'], errors = 'coerce')
data1['Trend_tag_count']= pd.to_numeric(data1['Trend_tag_count'], errors = 'coerce')
data1['Tag_count']= pd.to_numeric(data1['Tag_count'], errors = 'coerce')
data1['category_id']= pd.to_numeric(data1['category_id'], errors = 'coerce')
data1['likes']= pd.to_numeric(data1['likes'], errors = 'coerce')
data1['like dislike disabled']= data1['like dislike disabled'].astype(bool)
data1['comment_disabled']= data1['comment_disabled'].astype(bool)
data1['tag appered in title']= data1['tag appered in title'].astype(bool)
data1.info()

sns.boxplot(data1['subscriber'])

sns.distplot(data1['dislike'])

sns.boxplot(data1['likes'])

sns.catplot(x="comment_count",y="comment_disabled",data=data1,kind="bar",height=4)

sns.catplot(x="Trend_tag_count",y="Tag_count",data=data1,kind="bar",height=4)

sns.barplot(x= data1['Video_id'].head(), y= data1['Trend_day_count'].head())

sns.lineplot(x= data1['Video_id'].head(), y= data1['Trend_day_count'].head())

sns.countplot(x ='like dislike disabled', data=data1)

sns.countplot(x ='tag appered in title', data=data1)

sns.barplot(x= data1['likes'].head(), y= data1['views'].head())

"""**VIOLIN PLOT**"""

sns.violinplot(data1.Trend_day_count,data1.Trend_tag_count)

"""**REGRESSION PLOT**"""

sns.regplot(x = data1.Trend_day_count, y = data1.Trend_tag_count)

"""**HEAT MAP**"""

sns.heatmap(data = data1.corr(), annot = True, linewidth=0.5,cmap = 'Blues', cbar = True,vmin=-1, vmax=1)

